// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
//

[
  {
    "context": "GitPanel || ProjectPanel || CollabPanel || OutlinePanel || ChatPanel || VimControl || EmptyPane || SharedScreen || MarkdownPreview || KeyContextView || DebugPanel",
    "bindings": {
      //
      // Search-related operations
      //
      "ctrl-f": "file_finder::Toggle",
      "space s f": "file_finder::Toggle",
      "space space": "tab_switcher::Toggle",
      "space s s": "outline::Toggle",
      "space s a": "pane::DeploySearch",
      //
      // Pane navigation
      //
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown",
      //
      // Docks hide/unhide
      //
      "\\": "workspace::ToggleLeftDock",
      "ctrl-\\": "workspace::ToggleRightDock"
    }
  },
  {
    "context": "AgentPanel > MessageEditor > Editor",
    "bindings": {
      // Pane navigation
      "ctrl-h": "workspace::ActivatePaneLeft"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "d": "project_panel::Delete",
      "r": "project_panel::Rename"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      "ctrl-w -": "pane::SplitHorizontal",
      "ctrl-w \\": "pane::SplitVertical"
    }
  },
  {
    "context": "VimControl && !menu",
    "bindings": {
      // Put key bindings here if you want them to work in normal & visual mode.
      //
      //
      // Code-related operations
      //
      "space r": "editor::Rename",
      "space c h": "editor::Hover",
      "space c a": "editor::ToggleCodeActions",
      "space c c": "editor::ShowCompletions",
      "space c r": "editor::FindAllReferences",
      "space c i": "editor::GoToImplementation",
      "space c d": "editor::GoToDefinition",
      "space c t": "editor::GoToTypeDefinition",
      "space c shift-i": "editor::GoToImplementationSplit",
      "space c shift-d": "editor::GoToDefinitionSplit",
      "space c shift-t": "editor::GoToTypeDefinitionSplit",
      //
      // Diagnostics
      //
      "space d": "diagnostics::Deploy",
      //
      // Fold/unfold
      //
      "cmd-ctrl-[": "editor::Fold",
      "cmd-ctrl-]": "editor::UnfoldLines",
      "space f a": "editor::FoldAll",
      "space f u": "editor::UnfoldAll"
    }
  },
  {
    "context": "vim_mode == normal && !menu",
    "bindings": {
      // "shift-y": ["workspace::SendKeystrokes", "y $"] // Use neovim's yank behavior: yank to end of line.
    }
  },
  {
    "context": "vim_mode == insert",
    "bindings": {
      // "j k": "vim::NormalBefore" // In insert mode, make jk escape to normal mode.
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-k": "workspace::ActivatePaneUp"
    }
  },
  {
    "context": "EmptyPane || SharedScreen",
    "bindings": {
      // Put key bindings here (in addition to the context above) if you want them to
      // work when no editor exists.
      "ctrl-f": "file_finder::Toggle",
      "space s f": "file_finder::Toggle"
    }
  }
]
